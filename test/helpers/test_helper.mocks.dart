// Mocks generated by Mockito 5.4.4 from annotations
// in coffee_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:coffee_app/core/error/failure.dart' as _i7;
import 'package:coffee_app/core/network/dio_client.dart' as _i11;
import 'package:coffee_app/features/card_swipe/data/models/images_model.dart'
    as _i2;
import 'package:coffee_app/features/card_swipe/data/source/images_data_source.dart'
    as _i10;
import 'package:coffee_app/features/card_swipe/domain/entities/image_entity.dart'
    as _i8;
import 'package:coffee_app/features/card_swipe/domain/repository/image_repository.dart'
    as _i4;
import 'package:dio/dio.dart' as _i3;
import 'package:fpdart/fpdart.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeImageModel_0 extends _i1.SmartFake implements _i2.ImageModel {
  _FakeImageModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CoffeeImageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoffeeImageRepository extends _i1.Mock
    implements _i4.CoffeeImageRepository {
  MockCoffeeImageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.Either<_i7.Failure, _i8.ImageEntity>> fetchImages() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchImages,
          [],
        ),
        returnValue: _i5.Future<_i6.Either<_i7.Failure, _i8.ImageEntity>>.value(
            _i9.dummyValue<_i6.Either<_i7.Failure, _i8.ImageEntity>>(
          this,
          Invocation.method(
            #fetchImages,
            [],
          ),
        )),
      ) as _i5.Future<_i6.Either<_i7.Failure, _i8.ImageEntity>>);
}

/// A class which mocks [ImagesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagesRemoteDataSource extends _i1.Mock
    implements _i10.ImagesRemoteDataSource {
  MockImagesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ImageModel> fetchImagesFromAPI() => (super.noSuchMethod(
        Invocation.method(
          #fetchImagesFromAPI,
          [],
        ),
        returnValue: _i5.Future<_i2.ImageModel>.value(_FakeImageModel_0(
          this,
          Invocation.method(
            #fetchImagesFromAPI,
            [],
          ),
        )),
      ) as _i5.Future<_i2.ImageModel>);
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i11.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);

  @override
  _i5.Future<_i3.Response<dynamic>> post(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);

  @override
  _i5.Future<_i3.Response<dynamic>> put(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);

  @override
  _i5.Future<_i3.Response<dynamic>> delete(
    String? url, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);
}
